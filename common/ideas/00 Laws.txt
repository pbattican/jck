ideas = {
	economy = {
		law = yes
		use_list_view = yes

		undisturbed_isolation = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea undisturbed_isolation" }
			level = 7
			removal_cost = -1

			allowed = { always = no }
			cancel_if_invalid = no

			modifier = {
				consumer_goods_factor = 0.50
				production_speed_industrial_complex_factor = -0.5
				production_speed_arms_factory_factor = -0.5
				production_speed_dockyard_factor = -0.5
				conversion_cost_civ_to_mil_factor = 0.5
				conversion_cost_mil_to_civ_factor = 0.5
				generate_wargoal_tension = 1.00
				lend_lease_tension = 0.50
				send_volunteers_tension = 0.50
				guarantee_tension = 0.75
				max_fuel_factor = -0.45
				fuel_gain_factor = -0.6
				agency_upgrade_time = 1.0
			}

			allowed_to_remove = {
				OR = {
					has_war_support > 0.5
					has_war = yes
				}
			}

			ai_will_do = { factor = 0 }
		}

		isolation = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea isolation" }
			level = 6
			removal_cost = -1

			allowed = { always = no }
			cancel_if_invalid = no

			modifier = {
				consumer_goods_factor = 0.4
				production_speed_industrial_complex_factor = -0.4
				production_speed_arms_factory_factor = -0.4
				production_speed_dockyard_factor = -0.4
				conversion_cost_civ_to_mil_factor = 0.4
				conversion_cost_mil_to_civ_factor = 0.4
				generate_wargoal_tension = 1.00
				lend_lease_tension = 0.3
				send_volunteers_tension = 0.3
				guarantee_tension = 0.5
				max_fuel_factor = -0.35
				fuel_gain_factor = -0.5
				agency_upgrade_time = 0.8
			}

			allowed_to_remove = {
				OR = {
					has_war_support > 0.75
					has_war = yes
				}
			}

			ai_will_do = { factor = 0 }
		}

		civilian_economy = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea civilian_economy" }
			level = 5
			removal_cost = -1

			modifier = {
				consumer_goods_factor = 0.35
				production_speed_industrial_complex_factor = -0.3
				production_speed_arms_factory_factor = -0.3
				conversion_cost_civ_to_mil_factor = 0.3
				conversion_cost_mil_to_civ_factor = 0.3
				max_fuel_factor = -0.25
				fuel_gain_factor = -0.4
			}

			default = yes
			cancel_if_invalid = no

			ai_will_do = { factor = 0 }
		}

		low_economic_mobilisation = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea low_economic_mobilisation" }
			level = 4
			removal_cost = -1
			cancel_if_invalid = no

			available = {
				has_war_support > 0.15
			}

			modifier = {
				unit_limit_factory_bonus = 0.1
				consumer_goods_factor = 0.3
				production_speed_industrial_complex_factor = -0.1
				production_speed_arms_factory_factor = -0.1
				fuel_gain_factor = -0.25
			}

			ai_will_do = { factor = 600 }
		}

		partial_economic_mobilisation = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea partial_economic_mobilisation" }
			level = 3
			removal_cost = -1
			cancel_if_invalid = no

			available = {
				has_war_support > 0.25
			}

			modifier = {
				unit_limit_factory_bonus = 0.2
				consumer_goods_factor = 0.25
				production_speed_arms_factory_factor = 0.1
				conversion_cost_civ_to_mil_factor = -0.1
				conversion_cost_mil_to_civ_factor = -0.1
				fuel_gain_factor = -0.1
			}

			ai_will_do = {
				factor = 700
				modifier = { #one step at a time
					factor = 0
					NOT = { has_idea = low_economic_mobilisation }
				}
			}
		}

		war_economy = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea war_economy" }
			level = 2
			removal_cost = -1
			cancel_if_invalid = no

			available = {
				has_war_support > 0.5
				has_war = yes
				any_enemy_country = {
					ic_ratio = { tag = ROOT ratio > 0.4 }
				}
			}

			modifier = {
				unit_limit_factory_bonus = 0.3
				consumer_goods_factor = 0.2
				production_speed_arms_factory_factor = 0.2
				conversion_cost_civ_to_mil_factor = -0.2
				conversion_cost_mil_to_civ_factor = -0.2
			}

			ai_will_do = {
				factor = 60
				modifier = { #one step at a time
					factor = 0
					NOT = { has_idea = partial_economic_mobilisation }
				}
				modifier = {
					factor = 20
					manpower_per_military_factory > 3000
				}
			}
		}

		tot_economic_mobilisation = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea tot_economic_mobilisation" }
			level = 1
			removal_cost = -1
			cancel_if_invalid = no

			available = {
				has_war = yes
				has_war_support > 0.8
				any_enemy_country = {
					OR = {
						GER = {
							has_war_with = FRA
						}
						date > 1940.1.1
						ic_ratio = { tag = ROOT ratio > 0.5 }
					}
				}
			}

			modifier = {
				unit_limit_factory_bonus = 0.4
				consumer_goods_factor = 0.10
				conscription = -0.03
				production_speed_arms_factory_factor = 0.3
				conversion_cost_civ_to_mil_factor = -0.3
				conversion_cost_mil_to_civ_factor = -0.3
			}

			ai_will_do = {
				factor = 10
				modifier = { #one step at a time
					factor = 0
					NOT = { has_idea = war_economy }
				}
				modifier = { #don't increase if it would drop conscription to zero
					factor = 0
					OR = {
						target_conscription_amount < 0.03
						manpower_per_military_factory < 10000
					}
				}
				modifier = { #Weight will overly overtake war economy if the AI has plenty of manpower
					factor = 100
					manpower_per_military_factory > 15000
				}
			}
		}
	}

	trade_laws = {
		law = yes
		use_list_view = yes

		## Used by SWI so isolationism isn't suicide ##
		command_economy = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea command_economy" }
			level = 5
			removal_cost = -1
			cancel_if_invalid = no

			allowed = { always = no }

			modifier = {
				min_export = 0
				industrial_capacity_factory = 0.15
				industrial_capacity_dockyard = 0.15
				production_speed_buildings_factor = 0.15
				research_speed_factor = 0.05
			}

			allowed_to_remove = {
				always = no
			}
		}

		uncontrolled_exports = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea uncontrolled_exports" }
			picture = isolation
			level = 5
			removal_cost = -1
			cancel_if_invalid = no

			allowed = { always = no }

			modifier = {
				min_export = 0.25
				consumer_goods_factor = 0.05
				civilian_intel_to_others = 40.0
				navy_intel_to_others = 40.0
				agency_upgrade_time = 0.15
			}

			allowed_to_remove = {
				has_war = yes
			}
		}

		free_trade = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea free_trade" }
			level = 4

			removal_cost = -1

			modifier = {
				min_export = 0.8
				industrial_capacity_factory = 0.15
				industrial_capacity_dockyard = 0.15
				production_speed_buildings_factor = 0.15
				research_speed_factor = 0.1
				civilian_intel_to_others = 40.0
				navy_intel_to_others = 20.0
			}

			ai_will_do = {
				factor = 0.5
				modifier = {
					check_variable = { resource@steel > 0 }
					add = resource@steel
				}
				modifier = {
					check_variable = { resource@oil > 0 }
					add = resource@oil
				}
				modifier = {
					check_variable = { resource@rubber > 0 }
					add = resource@rubber
				}
				modifier = {
					check_variable = { resource@aluminium > 0 }
					add = resource@aluminium
				}
				modifier = {
					check_variable = { resource@tungsten > 0 }
					add = resource@tungsten
				}
				modifier = {
					check_variable = { resource@chromium > 0 }
					add = resource@chromium
				}
			}
		}

		export_focus = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea export_focus" }
			level = 3

			removal_cost = -1

			modifier = {
				min_export = 0.5
				industrial_capacity_factory = 0.1
				industrial_capacity_dockyard = 0.1
				production_speed_buildings_factor = 0.1
				research_speed_factor = 0.05
				civilian_intel_to_others = 20.0
				navy_intel_to_others = 10.0
			}

			default = yes

			ai_will_do = {
				factor = 1
				modifier = {
					check_variable = { resource_produced@steel > 0 }

					subtract_from_temp_variable = { steel_deficit = resource@steel }
					add = steel_deficit
				}
				modifier = {
					check_variable = { resource_produced@oil > 0 }

					subtract_from_temp_variable = { oil_deficit = resource@oil }
					add = oil_deficit
				}
				modifier = {
					check_variable = { resource_produced@rubber > 0 }

					subtract_from_temp_variable = { rubber_deficit = resource@rubber }
					add = rubber_deficit
				}
				modifier = {
					check_variable = { resource_produced@aluminium > 0 }

					subtract_from_temp_variable = { aluminium_deficit = resource@aluminium }
					add = aluminium_deficit
				}
				modifier = {
					check_variable = { resource_produced@tungsten > 0 }

					subtract_from_temp_variable = { tungsten_deficit = resource@tungsten }
					add = tungsten_deficit
				}
				modifier = {
					check_variable = { resource_produced@chromium > 0 }

					subtract_from_temp_variable = { chromium_deficit = resource@chromium }
					add = chromium_deficit
				}
			}
		}

		limited_exports = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea limited_exports" }
			level = 2
			removal_cost = -1
			cancel_if_invalid = no

			available = {
				OR = {
					has_idea = partial_economic_mobilisation
					has_idea = war_economy
					has_idea = tot_economic_mobilisation
				}
			}

			modifier = {
				min_export = 0.25
				industrial_capacity_factory = 0.05
				industrial_capacity_dockyard = 0.05
				production_speed_buildings_factor = 0.05
				research_speed_factor = 0.01
				civilian_intel_to_others = 10.0
				navy_intel_to_others = 5
			}

			ai_will_do = {
				factor = 1
				modifier = {
					factor = 0
					is_major = no #only majors should choose limited exports
				}
				modifier = {
					factor = 0
					is_in_faction = yes #don't screw over your allies
				}
				modifier = {
					factor = 0
					has_war = no #if at peace, prioritise the bonuses
				}
				modifier = {
					check_variable = { resource_produced@steel > 0 }

					subtract_from_temp_variable = { steel_deficit = resource@steel }
					add = steel_deficit
				}
				modifier = {
					check_variable = { resource_produced@oil > 0 }

					subtract_from_temp_variable = { oil_deficit = resource@oil }
					add = oil_deficit
				}
				modifier = {
					check_variable = { resource_produced@rubber > 0 }

					subtract_from_temp_variable = { rubber_deficit = resource@rubber }
					add = rubber_deficit
				}
				modifier = {
					check_variable = { resource_produced@aluminium > 0 }

					subtract_from_temp_variable = { aluminium_deficit = resource@aluminium }
					add = aluminium_deficit
				}
				modifier = {
					check_variable = { resource_produced@tungsten > 0 }

					subtract_from_temp_variable = { tungsten_deficit = resource@tungsten }
					add = tungsten_deficit
				}
				modifier = {
					check_variable = { resource_produced@chromium > 0 }

					subtract_from_temp_variable = { chromium_deficit = resource@chromium }
					add = chromium_deficit
				}
			}
		}

		closed_economy = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea closed_economy" }
			level = 1
			removal_cost = -1
			cancel_if_invalid = no

			available = {
				has_war = yes
				OR = {
					has_idea = war_economy
					has_idea = tot_economic_mobilisation
				}
			}

			modifier = {
				min_export = 0
				custom_modifier_tooltip = closed_economy_TT
			}

			ai_will_do = {
				factor = 1
				modifier = {
					factor = 0
					is_major = no #only majors should choose limited exports
				}
				modifier = {
					factor = 0
					is_in_faction = yes #don't screw over your allies
				}
				modifier = {
					factor = 0
					has_war = no #if at peace, prioritise the bonuses
				}
				modifier = {
					check_variable = { resource_produced@steel > 0 }

					subtract_from_temp_variable = { steel_deficit = resource@steel }
					add = steel_deficit
				}
				modifier = {
					check_variable = { resource_produced@oil > 0 }

					subtract_from_temp_variable = { oil_deficit = resource@oil }
					add = oil_deficit
				}
				modifier = {
					check_variable = { resource_produced@rubber > 0 }

					subtract_from_temp_variable = { rubber_deficit = resource@rubber }
					add = rubber_deficit
				}
				modifier = {
					check_variable = { resource_produced@aluminium > 0 }

					subtract_from_temp_variable = { aluminium_deficit = resource@aluminium }
					add = aluminium_deficit
				}
				modifier = {
					check_variable = { resource_produced@tungsten > 0 }

					subtract_from_temp_variable = { tungsten_deficit = resource@tungsten }
					add = tungsten_deficit
				}
				modifier = {
					check_variable = { resource_produced@chromium > 0 }

					subtract_from_temp_variable = { chromium_deficit = resource@chromium }
					add = chromium_deficit
				}
			}
		}
	}

	mobilization_laws = {
		law = yes
		use_list_view = yes

		disarmed_nation = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea disarmed_nation" }
			level = 7
			removal_cost = -1
			cancel_if_invalid = no

			modifier = {
				conscription = 0.01
			}
		}

		volunteer_only = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea volunteer_only" }
			level = 6
			removal_cost = -1
			cancel_if_invalid = no
			default = yes

			modifier = {
				conscription = 0.015
			}

			ai_will_do = { factor = 10 }
		}

		limited_conscription = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea limited_conscription" }
			level = 5
			removal_cost = -1
			cancel_if_invalid = no

			available = {
				has_war_support > 0.1
				NOT = { has_idea = undisturbed_isolation }
				NOT = { has_idea = isolation }
				NOT = { has_country_flag = cannot_have_conscription }
			}

			modifier = {
				conscription = 0.025
			}

			ai_will_do = {
				factor = 10
				modifier = { #one step at a time
					factor = 0
					NOT = { has_idea = volunteer_only }
				}
				modifier = { # the economy is mobilised enough - conscript people!
					factor = 50
					OR = {
						has_idea = partial_economic_mobilisation
						has_idea = war_economy
					}
				}
				modifier = { #prio if low on manpower
					factor = 20
					manpower_per_military_factory < 1500
				}
			}
		}

		extensive_conscription = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea extensive_conscription" }
			level = 4
			removal_cost = -1
			cancel_if_invalid = no

			available = {
				has_war_support > 0.2
				OR = {
					has_war_support > 0.5
					AND = {
						has_war = yes
						enemies_strength_ratio > 0.5
					}
				}
				NOT = { has_country_flag = cannot_have_conscription }
				NOT = { has_country_flag = cannot_have_extensive_conscription }
			}

			modifier = {
				conscription = 0.05
				training_time_factor = 0.1
			}

			ai_will_do = {
				factor = 10
				modifier = { #one step at a time
					factor = 0
					NOT = { has_idea = limited_conscription }
				}
				modifier = {
					factor = 50  #The tag has enough equipment stockpiled but doesn't have manpower
					amount_manpower_in_deployment_queue < 40000   # Less than 4 divs in training
					has_equipment = { infantry_equipment > 5000 } # And has enough equipment in stockpile to train new divisions
				}
				modifier = { #prio if low on manpower
					factor = 20
					manpower_per_military_factory < 2000
				}
			}
		}

		service_by_requirement = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea service_by_requirement" }
			level = 3
			removal_cost = -1
			cancel_if_invalid = no

			available = {
				has_war = yes
				OR = {
					has_war_support > 0.6
					surrender_progress > 0
				}
				enemies_strength_ratio > 0.6
				NOT = {
					has_country_flag = cannot_have_conscription
					has_country_flag = cannot_have_extensive_conscription
				}
			}

			modifier = {
				conscription = 0.1
				industrial_capacity_factory = -0.1
				industrial_capacity_dockyard = -0.1
				production_speed_buildings_factor = -0.1
				training_time_factor = 0.2
			}

			ai_will_do = {
				factor = 10
				modifier = { #one step at a time
					factor = 0
					NOT = { has_idea = extensive_conscription }
				}
				modifier = { #already mobilising
					factor = 0
					NOT = { check_variable = { target_conscription_amount = current_conscription_amount } }
				}
				modifier = { #ignore if high on manpower
					factor = 0
					manpower_per_military_factory > 3000
				}
				modifier = { #lower if decent manpower
					factor = 0.5
					manpower_per_military_factory > 1000
				}
				modifier = { #prio if low on manpower
					factor = 20
					manpower_per_military_factory < 700
				}
			}
		}

		all_adults_serve = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea all_adults_serve" }
			level = 2
			removal_cost = -1
			cancel_if_invalid = no

			available = {
				has_war = yes
				OR = {
					has_war_support > 0.7
					surrender_progress > 0
				}
				enemies_strength_ratio > 0.75
				NOT = {
					has_country_flag = cannot_have_conscription
					has_country_flag = cannot_have_extensive_conscription
				}
			}

			modifier = {
				conscription = 0.2
				industrial_capacity_factory = -0.3
				industrial_capacity_dockyard = -0.3
				production_speed_buildings_factor = -0.3
				#XP from reinforcement penalty (small)
				training_time_factor = 0.3
			}

			ai_will_do = {
				factor = 10
				modifier = { #one step at a time
					factor = 0
					NOT = { has_idea = service_by_requirement }
				}
				modifier = { #already mobilising
					factor = 0
					NOT = { check_variable = { target_conscription_amount = current_conscription_amount } }
				}
				modifier = { #ignore if high on manpower
					factor = 0
					manpower_per_military_factory > 2800
				}
				modifier = { #lower if decent manpower
					factor = 0.5
					manpower_per_military_factory > 1000
				}
				modifier = { #prio if low on manpower
					factor = 20
					manpower_per_military_factory < 600
				}
			}
		}

		scraping_the_barrel = {
			on_add = { log = "[GetDateText]: [Root.GetName]: add idea scraping_the_barrel" }
			level = 1
			removal_cost = -1
			cancel_if_invalid = no

			available = {
				has_war = yes
				OR = {
					has_war_support > 0.85
					surrender_progress > 0.25
				}
				enemies_strength_ratio > 1
				NOT = {
					has_country_flag = cannot_have_conscription
					has_country_flag = cannot_have_extensive_conscription
				}
			}

			modifier = {
				conscription = 0.25
				industrial_capacity_factory = -0.4
				industrial_capacity_dockyard = -0.4
				production_speed_buildings_factor = -0.4
				training_time_factor = 0.5
			}

			ai_will_do = {
				factor = 10
				modifier = { #one step at a time
					factor = 0
					NOT = { has_idea = all_adults_serve }
				}
				modifier = { #already mobilising
					factor = 0
					NOT = { check_variable = { target_conscription_amount = current_conscription_amount } }
				}
				modifier = { #ignore if high on manpower
					factor = 0
					manpower_per_military_factory > 5000
				}
				modifier = { #lower if decent manpower
					factor = 0.5
					manpower_per_military_factory > 1000
				}
				modifier = { #prio if low on manpower
					factor = 20
					manpower_per_military_factory < 500
				}
			}
		}
	}
}
